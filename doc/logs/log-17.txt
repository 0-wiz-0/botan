
* 1.7.5, April 13, 2008
 - The API of X509_CA::sign_request was altered to avoid race conditions
 - New type Pipe::message_id to represent the Pipe message number
 - Remove the Named_Mutex_Holder for a small performance gain
 - Removed several unused or rarely used functions from Config
 - Ignore spaces inside of a decimal string in BigInt::decode
 - Allow using a std::istream to initialize a DataSource_Stream object
 - Fix compilation problem in zlib compression module
 - The chunk sized used by Pooling_Allocator is now a compile time setting
 - The size of random blinding factors is now a compile time setting
 - The install target no longer tries to set a particular owner/group

* 1.7.4, March 10, 2008
 - Use unaligned memory read/writes on systems that allow it, for performance
 - Assembly for x86-64 for accessing the bswap instruction
 - Use larger buffers in ARC4 and WiderWAKE for significant throughput increase
 - Unroll loops in SHA-160 for a few percent increase in performance
 - Fix compliation with GCC 3.2 in es_ftw and es_unix
 - Build fix for NetBSD systems
 - Prevent es_dev from being built except on Unix systems

* 1.7.3, January 23, 2008
 - New invocation syntax for configure.pl with several new options
 - Support for IPv4 addresses in a subject alternative name
 - New fast poll for the generic Unix entropy source (es_unix)
 - The es_file entropy source has been replaced by the es_dev module
 - The malloc allocator does not inherit from Pooling_Allocator anymore
 - The path that es_unix will search in are now fully user-configurable
 - Truncate X9.42 PRF output rather than allow counter overflow
 - PowerPC is now assumed to be big-endian

* 1.7.2, October 13, 2007
 - Initialize the global library state lazily
 - Add plain CBC-MAC for backwards compatability with old systems
 - Clean up some of the self test code
 - Throw a sensible exception if a DL_Group is not found
 - Truncate KDF2 output rather than allowing counter overflow
 - Add newly assigned OIDs for SHA-2 and DSA with SHA-224/256
 - Fix a Visual Studio compilation problem in x509stat.cpp

* 1.7.1, July 23, 2007
 - Fix a race condition in the algorithm object cache
 - HMAC key schedule optimization
 - The build header sets a macro defining endianness, if known
 - New word load/store abstraction allowing further optimization
 - Modify most of the library to avoid use the C-style casts
 - Use higher resolution timers in symmetric benchmarks

* 1.7.0, May 19, 2007
 - DSA parameter generation now follows FIPS 186-3
 - Added OIDs for Rabin-Williams and Nyberg-Rueppel
 - Somewhat better support for out of tree builds
 - Minor optimizations for RC2 and Tiger
 - Documentation updates
 - Update the todo list
