; A script for packaging botan with InnoSetup

[Setup]
AppName=Botan
AppVerName=Botan %{version}

AppPublisher=Jack Lloyd
AppCopyright=Copyright (C) 1999-2009 Jack Lloyd and others
AppPublisherURL=http://botan.randombit.net/
AppVersion=%{version}

DefaultDirName={pf}\botan
DefaultGroupName=botan

SolidCompression=yes

OutputDir=.
OutputBaseFilename=botan-%{version}

[Types]
Name: "user"; Description: "User"
Name: "devel"; Description: "Developer"

[Components]
name: "dll"; Description: "Runtime DLLs"; Types: user devel; Flags: fixed
name: "implib"; Description: "Import Library"; Types: devel
name: "includes"; Description: "Include Files"; Types: devel
name: "docs"; Description: "Developer Documentation"; Types: devel

[Files]
; License file is always included
Source: "..\botan.dll"; DestDir: "{app}"; Components: dll
Source: "..\botan.dll.manifest"; DestDir: "{app}"; Components: dll
Source: "..\doc\license.txt"; DestDir: "{app}"; Components: dll; AfterInstall: ConvertLineEndings

Source: "..\botan.exp"; DestDir: "{app}"; Components: implib
Source: "..\botan.lib"; DestDir: "{app}"; Components: implib

Source: "include\botan\*"; DestDir: "{app}\include\botan"; Components: includes; AfterInstall: ConvertLineEndings

Source: "..\readme.txt"; DestDir: "{app}\doc"; Components: docs; AfterInstall: ConvertLineEndings
Source: "..\doc\log.txt"; DestDir: "{app}\doc"; Components: docs; AfterInstall: ConvertLineEndings

[Code]
procedure ConvertLineEndings();
  var
     FileContents : String;
     CR : String;
     LF : String;
     CRLF : String;
begin
   if ExtractFileName(CurrentFileName) <> 'build.h' then
   begin
      LF := #10;
      CR := #13;
      CRLF := CR + LF;
      LoadStringFromFile(ExpandConstant(CurrentFileName), FileContents);
      StringChangeEx(FileContents, LF, CRLF, False);
      SaveStringToFile(ExpandConstant(CurrentFileName), FileContents, False);
   end;
end;
